CREATE OR REPLACE FUNCTION check_vulnerability_status()
RETURNS TRIGGER AS $$
DECLARE
    v_vuln_status VARCHAR(20);
    v_vuln_id INT;
BEGIN
    IF NEW.vulnerability_id IS NOT NULL THEN
        SELECT status, vulnerability_id INTO v_vuln_status, v_vuln_id
        FROM Vulnerability
        WHERE vulnerability_id = NEW.vulnerability_id;
        
        IF v_vuln_status = 'Исправлена' THEN
            UPDATE Vulnerability
            SET status = 'Повторно открыта',
                fix_date = NULL
            WHERE vulnerability_id = NEW.vulnerability_id;
            
            RAISE NOTICE 'Уязвимость ID % переведена в статус "Повторно открыта"', NEW.vulnerability_id;
        END IF;
        
        IF v_vuln_status = 'Закрыта' THEN
            RAISE EXCEPTION 'Нельзя создать инцидент для уязвимости ID %, так как она имеет статус "Закрыта"', NEW.vulnerability_id;
        END IF;
    END IF;
    
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;